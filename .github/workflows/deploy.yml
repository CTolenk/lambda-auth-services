name: Deploy Infrastructure (Clean)

on:
  workflow_call:
    inputs:
      source_code_hash_auth_login:
        required: true
        type: string
      source_code_hash_auth_register:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_env: ${{ github.ref_name == 'main' && 'prod' || 'stage' }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: infrastructure
        run: terraform init

      - name: Terraform Destroy (Clean slate)
        working-directory: infrastructure
        run: |
          terraform destroy -auto-approve \
            -var-file=environments/${{ env.TF_VAR_env }}.tfvars \
            -var="source_code_hash_auth_login=${{ inputs.source_code_hash_auth_login }}" \
            -var="source_code_hash_auth_register=${{ inputs.source_code_hash_auth_register }}"
          

      - name: Force delete IAM roles (dynamic)
        run: |
          MODULES=$(ls infrastructure/modules)
          for module in $MODULES; do
            ROLE_NAME="${module}-${{ env.TF_VAR_env }}-role"
            echo "🔍 Checking IAM role: $ROLE_NAME"
            if aws iam get-role --role-name "$ROLE_NAME" > /dev/null 2>&1; then
              echo "🧨 Deleting role: $ROLE_NAME"
              aws iam detach-role-policy \
                --role-name "$ROLE_NAME" \
                --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole || true
              aws iam delete-role --role-name "$ROLE_NAME" || true
            else
              echo "✅ Role $ROLE_NAME not found. Skipping."
            fi
          done

      - name: Terraform Apply
        working-directory: infrastructure
        run: |
          terraform apply -auto-approve \
            -var-file=environments/${{ env.TF_VAR_env }}.tfvars \
            -var="source_code_hash_auth_login=${{ inputs.source_code_hash_auth_login }}" \
            -var="source_code_hash_auth_register=${{ inputs.source_code_hash_auth_register }}"
